<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yoop.Wu</title>
  
  <subtitle>人生没有四季，努力就是旺季，不努力就是淡季!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoopwu.github.io/"/>
  <updated>2018-03-09T14:03:54.885Z</updated>
  <id>http://yoopwu.github.io/</id>
  
  <author>
    <name>Yoop.Wu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基于PawServer搭建Android上的PHP环境</title>
    <link href="http://yoopwu.github.io/2018/03/09/%E6%90%AD%E5%BB%BAAndroid%E4%B8%8A%E7%9A%84PHP%E7%8E%AF%E5%A2%83/"/>
    <id>http://yoopwu.github.io/2018/03/09/搭建Android上的PHP环境/</id>
    <published>2018-03-09T04:56:52.000Z</published>
    <updated>2018-03-09T14:03:54.885Z</updated>
    
    <content type="html"><![CDATA[<p>在Android手机上搭建本地服务器的方式有很多种，而且相对而言都比较简单。个人觉得比较好用，而且上手难度表较低的还是<a href="https://github.com/koush/AndroidAsync" target="_blank" rel="noopener">AndroidAsync</a>，当然还有利用<a href="https://github.com/NanoHttpd/nanohttpd" target="_blank" rel="noopener">NanoHTTPD</a>来搭建自己的本地服务器的,总体来说都是不错的选择。好了，言归正传！但由于项目上的需求，需要在本地服务器中运行php代码，实现一系列的接口调用等功能，所以就不得不另寻他法，最后发现了PawServer这个神奇的东西。具体怎么来搭建我们的本地服务器呢，下面开始一步一步的介绍。</p><h3 id="下载官方PAW-Server-for-Android"><a href="#下载官方PAW-Server-for-Android" class="headerlink" title="下载官方PAW Server for Android"></a>下载官方PAW Server for Android</h3><p>进入PawServer<a href="http://paw-android.fun2code.de/" target="_blank" rel="noopener">官网</a>，下载PAW Server for Android软件，并安装到手机上。这个app是需要在Google Play上面下载的，为了方便下载，可自己百度如何在Google play上面下载app，这里提供一个可以下载的网址，点<a href="https://apps.evozi.com/apk-downloader/" target="_blank" rel="noopener">这里</a>。具体怎么使用，我相信聪明的你一定会懂的！下载之后，安装到手机上，点击运行，根据页面的提示，打开对应的网址，即可看到如下页面信息:</p><p><img src="/img/paw_demo_login.png" alt=""></p><p>在登录窗口中输入用户名:admin，密码:paw 然后进入主页，您看到的页面应该是这样的:</p><a id="more"></a><p><img src="/img/paw_demo_main_page.png" alt=""></p><p>首先我们先创建一个test.php文件，并把这个文件放到../paw/html/文件夹下面，重启服务，在地址栏中输入:<code>192.168.1.109:8080/test.php</code>，我们会看的这个页面:</p><p><img src="/img/paw_php_test_fail.png" alt=""><br>事实证明，此时我们的服务器还不支持php环境。那么我们下一步需要做的工作就是让它支持php环境的运行。</p><h3 id="安装php插件"><a href="#安装php插件" class="headerlink" title="安装php插件"></a>安装php插件</h3><ul><li>左侧 “Add-Ons”——“Plug-ins”</li><li>我们用第一个 PHP Plug-in (Setup) 。最右侧有下载按钮，下载就可以了。</li><li>然后解压到/sdcard/paw/html/app/plugins/</li><li>然后刷新网页，左侧多出一 个“Plug-ins” 的主菜单，进入，然后 “PHP Setup”</li><li>选一个版本，点 “Install”。</li><li>然后在手机上关闭 PAW 的服务（就是点那个大按钮），然后再启动（还是点大按钮）</li><li>刷新网页，还是刚才那个页面，右侧灰色条状区域上面有个 PHP info page 的链接，点击。</li></ul><p>如果看到如下图的页面就成功了<br><img src="/img/paw_demo_php_install_success.png" alt=""></p><p>到此，在官方提供的app中，安装php插件就已经完成了，重启服务，在地址栏中再次输入:<code>192.168.1.109:8080/test.php</code>，我们会看的这个页面:</p><p><img src="/img/paw_test_php.png" alt=""></p><p>由此可以验证，我们的运行的服务器，在安装完php插件后，是支持php环境的。<br>但是，实际情况是，我们不能在运行我们自己的程序时，还必要要运行其他的软件，而形成一个依赖关系，这肯定是不行的。那么，我们要怎样做才能把这个本地服务的功能集成到我们自己的app中，同时还要完成运行php环境的搭建呢，那么接下来才是我们的工作重点！</p><h3 id="下载资源"><a href="#下载资源" class="headerlink" title="下载资源"></a>下载资源</h3><p>同样的，打开PawServer<a href="http://paw-android.fun2code.de/" target="_blank" rel="noopener">官网</a>，把页面滚动到最下面，我们会看到有我们所需要的东西，那么我们可以根据自己的需求来下载对应的资源文件，因为我是用Android Studio来进行开发的，所以我选择的是下载Android Studio Project对应的文件，也就是BuildOwnPawServer_AndroidStudio.zip。如图所示：<br><img src="/img/pawserver_download_page.png" alt="PawServer资源下载"><br>下载完成后得到的project其实就是一个利用PawServer来搭建自己的本地服务器的demo。接下来，就可以运行这个demo了。</p><h3 id="安装php插件-1"><a href="#安装php插件-1" class="headerlink" title="安装php插件"></a>安装php插件</h3><p>运行项目，把软件安装到手机上面，根据页面上的提示信息，在浏览器中打开对应的网址，比如我的手机显示的就是<code>192.168.1.109:7575</code>。为了方便调试，我修改了<code>INSTALL_DIR = Environment.getExternalStorageDirectory().getPath() + &quot;/www&quot;;</code> 当你看到如下所示页面时，就代表PawServer以及成功运行了。<br><img src="/img/paw_server_first_run.png" alt=""></p><p>在项目中的asset文件中中，我们会发现一个content.zip文件，我们复制出来，并解压，后面会需要用到。同样的，打开文件管理器，找到paw文件夹，这个文件夹就是之前demo运行时所生成的文件，然后点击进入html文件夹，对比我们前面解压出来的content文件夹中的html文件夹，不难发现会多出来一个app的文件夹，而且里面有很多的东西，当然也包括了plugins文件夹，简单一点处理，就是把app文件夹一并拷贝的content/html/文件夹中，然后再重新打包成content.zip文件，并拷贝到项目中，替换原来的content.zip。</p><p><b>值得注意一点的是:细心的您应该会发现demo运行时的端口是8080，而下载的project运行时的demo的端口是7575，那么，我们要怎么修改端口号呢？很简单，在解压出来的content文件夹中，找到文件/conf/server.xml，修改server.xml中的端口值就好了。</b></p><p>接下来，咱们需要做的步骤就是在文件管理器中找到www文件夹并删除，然后再运行project。再次进入文件管理器中找到www文件夹，我们会发现我们需要的php_plugin是存在的，我们要怎么处理才能完成对php_plugin的安装呢？</p><p>重新打开网址<code>192.168.1.109:8080/app</code>（修改了端口号），我们会看到这样一个和之前一样的登录页面，但是很多东西都显示不出来，具体原因是什么，我倒是也没有去研究过，如果有谁知道，请告诉我，谢谢啦！但是并不影响使用，同样的输入admin/paw的账号，同样会进入到主页，那么，很不幸的，还是没有东西，会看到一大堆的null，就像这样的:</p><p><img src="/img/paw_main_null_page.png" alt=""></p><p>其实，我内心也是拒绝的，没办法，工作还得继续!=_=!，当然，我想表达的意思是，我们能不能不通过打开网页的方式，点击’install’来完成php_plugin的安装呢？这样好麻烦的对吧，而且，在实际情况的运用中，咱不可能再要用户去打开一个网页，然后再点击’install’按钮什么的，这样的处理方式太不人性化，而且，到时候，谁还会用你的软件呢。。。。。</p><p>因此，我们下一步的工作就是研究如何在客户端中完成这个操作，对此我们需要研究，我们之前在网页中点击’install’按钮时，系统在背后做了什么工作。</p><p>下面这段代码就是我从php_plugin/index.xhtml中摘抄下来的源码：</p><pre><code>install = parameters.get(&quot;install&quot;);if(install != null &amp;&amp; install.equals(&quot;true&quot;)) {  overwrite = (parameters.get(&quot;overwrite_php_ini&quot;) != null &amp;&amp; parameters.get(&quot;overwrite_php_ini&quot;).equals(&quot;on&quot;)) ? true : false;  binDir = new File(dataDir);  // Create bin directory  if(!binDir.exists()) {     binDir.mkdir();  }  phpVersion = parameters.get(&quot;php_version&quot;);  // Copy php-cgi  cp(pluginPath + &quot;/bin/php-cgi_&quot;  + phpVersion, dataDir + &quot;/php-cgi&quot;);  exec(&quot;chmod 755 &quot; + dataDir + &quot;/php-cgi&quot;);  // Generate php.ini  phpIniSource = new File(pluginPath + &quot;/templates/php.ini&quot;);  phpIniDest = new File(pluginPath + &quot;/conf/php.ini&quot;);  if(!phpIniDest.exists() || overwrite) {     iniContent = getFileAsString(phpIniSource);     iniContent = iniContent.replace(&quot;[TIMEZONE]&quot;, parameters.get(&quot;timezone&quot;));     iniContent = iniContent.replace(&quot;[TMP_DIR]&quot;, &quot;[PAW_HOME]/tmp&quot;);     iniContent = iniContent.replace(&quot;[INCLUDE_PATH]&quot;, pluginPath + &quot;/conf&quot;);     writeStringToFile(iniContent, phpIniDest);  }  // Generate handler.xml  handlerTemplateSource = new File(pluginPath + &quot;/templates/handler.xml&quot;);  handlerDest = new File(pawHome + &quot;/conf/handler.xml&quot;);  handlerTemplate = getFileAsString(handlerTemplateSource);  handlerTemplate = handlerTemplate.replace(&quot;[PHP_CGI]&quot;, dataDir + &quot;/php-cgi&quot;);  handlerTemplate = handlerTemplate.replace(&quot;[HTML_PATH]&quot;, &quot;[PAW_HOME]/html&quot;);  handlerTemplate = handlerTemplate.replace(&quot;[TMP_DIR]&quot;, &quot;[PAW_HOME]/tmp&quot;);  handlerTemplate = handlerTemplate.replace(&quot;[INCLUDE_PATH]&quot;, &quot;[PAW_HOME]/html/app/plugins/&quot; + pluginName + &quot;/conf&quot;);  // Remove to be sure  replaceInFile(handlerDest, &quot;(.*)&lt;handler.*?&lt;id&gt;phpCgiHandler&lt;/id&gt;.*?&lt;/handler&gt;[^&lt;]*(.*)&quot;, &quot;$1$2&quot;);  // Insert  replaceInFile(handlerDest, &quot;(.*&lt;handler.*?&lt;id&gt;auth&lt;/id&gt;.*?&lt;/handler&gt;[^&lt;]*)(.*)&quot;, &quot;$1&quot; + handlerTemplate + &quot;$2&quot;);  print(&quot;&lt;p&gt;&lt;div style=&apos;width: 80%; background: rgb(150, 193, 77); border: 1px solid black;padding: 10px;&apos;&gt;&lt;h3&gt;&lt;img src=&apos;images/info.png&apos; /&gt;&lt;i&gt;PHP has been installed!&lt;/i&gt;&lt;/h3&gt;&quot;);  print(&quot;The server has to be restarted for the changes to take effect!&lt;/div&gt;&lt;/p&gt;&quot;);}</code></pre><p>因此，理论上来讲，我们也只需要按照这个步骤来做，就能完成对php_plugin的安装，而不需要再通过打开网页，点击’install’来完成。</p><p>下面的代码就是我修改后的Java代码：</p><pre><code class="Java"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">installPhpPlugin</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>{    <span class="comment">// copy php-cgi</span>    String dataDir = getFilesDir().getAbsolutePath().replace(<span class="string">"/files"</span>, <span class="string">"/bin"</span>);    String pluginPath = INSTALL_DIR + <span class="string">"/html/app/plugins/php_plugin"</span>;    FileUtils.fileCopy(<span class="keyword">this</span>,pluginPath + <span class="string">"/bin/php-cgi_5.4.2"</span>, dataDir + <span class="string">"/php-cgi"</span>);    Runtime.getRuntime().exec(<span class="string">"chmod 755 "</span> + dataDir + <span class="string">"/php-cgi"</span>);    <span class="comment">// Generate php.ini</span>    File phpIniSource = <span class="keyword">new</span> File(pluginPath + <span class="string">"/templates/php.ini"</span>);    File phpIniDest = <span class="keyword">new</span> File(pluginPath + <span class="string">"/conf/php.ini"</span>);    <span class="keyword">if</span>(!phpIniDest.exists()) {        String iniContent = FileUtils.getFileAsString(phpIniSource);        iniContent = iniContent.replace(<span class="string">"[TIMEZONE]"</span>, <span class="string">"Asia/Chongqing"</span>);        iniContent = iniContent.replace(<span class="string">"[TMP_DIR]"</span>, <span class="string">"[PAW_HOME]/tmp"</span>);        iniContent = iniContent.replace(<span class="string">"[INCLUDE_PATH]"</span>, pluginPath + <span class="string">"/conf"</span>);        FileUtils.writeStringToFile(iniContent, phpIniDest);    }    <span class="comment">// Generate handler.xml</span>    File handlerTemplateSource = <span class="keyword">new</span> File(pluginPath + <span class="string">"/templates/handler.xml"</span>);    File handlerDest = <span class="keyword">new</span> File(INSTALL_DIR + <span class="string">"/conf/handler.xml"</span>);    String handlerTemplate = FileUtils.getFileAsString(handlerTemplateSource);    handlerTemplate = handlerTemplate.replace(<span class="string">"[PHP_CGI]"</span>, dataDir + <span class="string">"/php-cgi"</span>);    handlerTemplate = handlerTemplate.replace(<span class="string">"[HTML_PATH]"</span>, <span class="string">"[PAW_HOME]/html"</span>);    handlerTemplate = handlerTemplate.replace(<span class="string">"[TMP_DIR]"</span>, <span class="string">"[PAW_HOME]/tmp"</span>);    handlerTemplate = handlerTemplate.replace(<span class="string">"[INCLUDE_PATH]"</span>, <span class="string">"[PAW_HOME]/html/app/plugins/php_plugin/conf"</span>);    <span class="comment">// Remove to be sure</span>    FileUtils.replaceInFile(handlerDest, <span class="string">"(.*)&lt;handler.*?&lt;id&gt;phpCgiHandler&lt;/id&gt;.*?&lt;/handler&gt;[^&lt;]*(.*)"</span>, <span class="string">"$1$2"</span>);    <span class="comment">// Insert</span>    FileUtils.replaceInFile(handlerDest, <span class="string">"(.*&lt;handler.*?&lt;id&gt;auth&lt;/id&gt;.*?&lt;/handler&gt;[^&lt;]*)(.*)"</span>, <span class="string">"$1"</span> + handlerTemplate + <span class="string">"$2"</span>);}</code></pre><p>那么，这段代码需要在什么时候执行呢，当然是在系统执行了对content.zip文件的解压之后，修改后的代码如下:</p><pre><code class="Java"><span class="comment">/**</span><span class="comment"> * Checks the installation and extracts the content.zip file</span><span class="comment"> * to INSTALL_DIR if needed</span><span class="comment"> */</span><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">checkInstallation</span><span class="params">()</span> </span>{    <span class="keyword">if</span>(!<span class="keyword">new</span> File(INSTALL_DIR).exists()) {        <span class="comment">// Create directories</span>        <span class="keyword">new</span> File(INSTALL_DIR).mkdirs();        <span class="comment">// Files not to overwrite</span>        HashMap&lt;String, Integer&gt; keepFiles = <span class="keyword">new</span> HashMap&lt;String, Integer&gt;();        <span class="comment">// Extract ZIP file form assets</span>        <span class="keyword">try</span> {            extractZip(getAssets().open(<span class="string">"content.zip"</span>),                    INSTALL_DIR, keepFiles);            <span class="comment">// 安装php插件</span>            installPhpPlugin();        } <span class="keyword">catch</span> (IOException e) {            Log.e(TAG, e.getMessage());        }    }}</code></pre><p>对应的FileUtils中的方法也一并列出来：</p><pre><code class="Java"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title">replaceInFile</span><span class="params">(File file, String what, String with)</span> </span>{    String content = getFileAsString(file);    Matcher matcher = Pattern.compile(what, Pattern.DOTALL).matcher(content);    <span class="keyword">if</span>(matcher.matches()) {        content = matcher.replaceAll(with);    }    writeStringToFile(content, file);}</code></pre><pre><code class="Java"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title">writeStringToFile</span><span class="params">(String s, File file)</span> </span>{    FileOutputStream fos = <span class="keyword">null</span>;    <span class="keyword">try</span> {        fos = <span class="keyword">new</span> FileOutputStream(file);        fos.write(s.getBytes());        fos.close();    } <span class="keyword">catch</span> (FileNotFoundException e) {        e.printStackTrace();    } <span class="keyword">catch</span> (IOException e) {        e.printStackTrace();    }}</code></pre><pre><code class="Java"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  String <span class="title">getFileAsString</span><span class="params">(File file)</span> </span>{    <span class="keyword">byte</span>[] buf = <span class="keyword">new</span> <span class="keyword">byte</span>[(<span class="keyword">int</span>) file.length()];    FileInputStream fis = <span class="keyword">null</span>;    <span class="keyword">try</span> {        fis = <span class="keyword">new</span> FileInputStream(file);        fis.read(buf);        fis.close();    } <span class="keyword">catch</span> (FileNotFoundException e) {        e.printStackTrace();    } <span class="keyword">catch</span> (IOException e) {        e.printStackTrace();    }    <span class="keyword">return</span> <span class="keyword">new</span> String(buf);}</code></pre><p>完成之后，重新打包、安装、运行，打开网页<code>http://192.168.1.109:8080/test.php</code>，然后，您就会发现php的运行环境已经搭建好了！那么，如何移植到您的项目中，我相信您一定很清楚了，我就不在此多写了！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在Android手机上搭建本地服务器的方式有很多种，而且相对而言都比较简单。个人觉得比较好用，而且上手难度表较低的还是&lt;a href=&quot;https://github.com/koush/AndroidAsync&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;AndroidAsync&lt;/a&gt;，当然还有利用&lt;a href=&quot;https://github.com/NanoHttpd/nanohttpd&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;NanoHTTPD&lt;/a&gt;来搭建自己的本地服务器的,总体来说都是不错的选择。好了，言归正传！但由于项目上的需求，需要在本地服务器中运行php代码，实现一系列的接口调用等功能，所以就不得不另寻他法，最后发现了PawServer这个神奇的东西。具体怎么来搭建我们的本地服务器呢，下面开始一步一步的介绍。&lt;/p&gt;
&lt;h3 id=&quot;下载官方PAW-Server-for-Android&quot;&gt;&lt;a href=&quot;#下载官方PAW-Server-for-Android&quot; class=&quot;headerlink&quot; title=&quot;下载官方PAW Server for Android&quot;&gt;&lt;/a&gt;下载官方PAW Server for Android&lt;/h3&gt;&lt;p&gt;进入PawServer&lt;a href=&quot;http://paw-android.fun2code.de/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网&lt;/a&gt;，下载PAW Server for Android软件，并安装到手机上。这个app是需要在Google Play上面下载的，为了方便下载，可自己百度如何在Google play上面下载app，这里提供一个可以下载的网址，点&lt;a href=&quot;https://apps.evozi.com/apk-downloader/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这里&lt;/a&gt;。具体怎么使用，我相信聪明的你一定会懂的！下载之后，安装到手机上，点击运行，根据页面的提示，打开对应的网址，即可看到如下页面信息:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/paw_demo_login.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在登录窗口中输入用户名:admin，密码:paw 然后进入主页，您看到的页面应该是这样的:&lt;/p&gt;
    
    </summary>
    
    
      <category term="PawServer" scheme="http://yoopwu.github.io/tags/PawServer/"/>
    
      <category term="Android" scheme="http://yoopwu.github.io/tags/Android/"/>
    
      <category term="PHP" scheme="http://yoopwu.github.io/tags/PHP/"/>
    
      <category term="本地服务器" scheme="http://yoopwu.github.io/tags/%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Java经典算法之——斐波拉西算法</title>
    <link href="http://yoopwu.github.io/2018/03/07/%E6%96%90%E6%B3%A2%E6%8B%89%E8%A5%BF%E7%AE%97%E6%B3%95/"/>
    <id>http://yoopwu.github.io/2018/03/07/斐波拉西算法/</id>
    <published>2018-03-07T12:16:33.000Z</published>
    <updated>2018-03-07T12:59:36.182Z</updated>
    
    <content type="html"><![CDATA[<h3 id="关于斐波拉西数列"><a href="#关于斐波拉西数列" class="headerlink" title="关于斐波拉西数列"></a>关于斐波拉西数列</h3><p>斐波那契数列（Fibonacci sequence），又称黄金分割数列、因数学家列昂纳多·斐波那契（Leonardoda Fibonacci）以兔子繁殖为例子而引入，故又称为“兔子数列”，指的是这样一个数列：1、1、2、3、5、8、13、21、34、……</p><p>在数学上，斐波纳契数列以如下被以递归的方法定义：F(0)=0，F(1)=1, F(n)=F(n-1)+F(n-2)（n&gt;=2，n∈N*）在现代物理、准晶体结构、化学等领域，斐波纳契数列都有直接的应用</p><h3 id="斐波拉西算法的实现"><a href="#斐波拉西算法的实现" class="headerlink" title="斐波拉西算法的实现"></a>斐波拉西算法的实现</h3><h4 id="第一种实现方式"><a href="#第一种实现方式" class="headerlink" title="第一种实现方式"></a>第一种实现方式</h4><p>一般来讲，斐波拉西算法的实现都是按照上面的公式<code>F(n)=F(n-1)+F(n-2)（n&gt;=2，n∈N*）</code>来实现的，因此具体点的算法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 利用递归思想实现</span><br><span class="line">public static long fibonaci(int position) &#123;</span><br><span class="line">if (position == 0 || position == 1) &#123;</span><br><span class="line">return position;</span><br><span class="line">&#125;</span><br><span class="line">return fibonaci(position - 1) + fibonaci(position - 2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>利用递归思想实现斐波拉西算法是可以的，结果也不会有错，但是这个方法存在一个弊端：当需要计算的量很大的时候，会大量占用系统资源，会出现较为严重的内存抖动问题，而且耗时很长，往往越到后面，每增加一个量，计算机计算的耗时会成几何倍数增长。举个例子：若我们计算fibonaci(50)和计算fibonaci(51),结果我们得到的结果是，fibonaci(50)耗时接近58秒,fibonaci(51)耗时接近94秒，由此可见，越到后面计算了越大，耗时就会越久，那么，有没有其他的实现方式，不仅耗时短而且还不占用太多的计算机资源呢？</p><h4 id="第二种实现方式"><a href="#第二种实现方式" class="headerlink" title="第二种实现方式"></a>第二种实现方式</h4><p>如下，是一种利用缓存的方式来优化的斐波拉西算法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 利用缓存的方式来优化斐波拉西算法</span><br><span class="line"> */</span><br><span class="line">public static long computyeFibonaci(int positionInFibSequence) &#123;</span><br><span class="line">long prev = 0;</span><br><span class="line">long current = 1;</span><br><span class="line">long newValue;</span><br><span class="line">for (int i = 1; i &lt; positionInFibSequence; i++) &#123;</span><br><span class="line">newValue = current + prev;</span><br><span class="line">prev = current;</span><br><span class="line">current = newValue;</span><br><span class="line">&#125;</span><br><span class="line">return current;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>经过计算验证可得，不管传入的参数是多少，对计算机来说，基本上是立即可得结果，较之利用递归方式来实现的算法，这种方式确实是优秀了不少。不仅不会出现内存抖动的问题，而且用时非常短</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;关于斐波拉西数列&quot;&gt;&lt;a href=&quot;#关于斐波拉西数列&quot; class=&quot;headerlink&quot; title=&quot;关于斐波拉西数列&quot;&gt;&lt;/a&gt;关于斐波拉西数列&lt;/h3&gt;&lt;p&gt;斐波那契数列（Fibonacci sequence），又称黄金分割数列、因数学家列昂纳多·斐波那契（Leonardoda Fibonacci）以兔子繁殖为例子而引入，故又称为“兔子数列”，指的是这样一个数列：1、1、2、3、5、8、13、21、34、……&lt;/p&gt;
&lt;p&gt;在数学上，斐波纳契数列以如下被以递归的方法定义：F(0)=0，F(1)=1, F(n)=F(n-1)+F(n-2)（n&amp;gt;=2，n∈N*）在现代物理、准晶体结构、化学等领域，斐波纳契数列都有直接的应用&lt;/p&gt;
&lt;h3 id=&quot;斐波拉西算法的实现&quot;&gt;&lt;a href=&quot;#斐波拉西算法的实现&quot; class=&quot;headerlink&quot; title=&quot;斐波拉西算法的实现&quot;&gt;&lt;/a&gt;斐波拉西算法的实现&lt;/h3&gt;&lt;h4 id=&quot;第一种实现方式&quot;&gt;&lt;a href=&quot;#第一种实现方式&quot; class=&quot;headerlink&quot; title=&quot;第一种实现方式&quot;&gt;&lt;/a&gt;第一种实现方式&lt;/h4&gt;&lt;p&gt;一般来讲，斐波拉西算法的实现都是按照上面的公式&lt;code&gt;F(n)=F(n-1)+F(n-2)（n&amp;gt;=2，n∈N*）&lt;/code&gt;来实现的，因此具体点的算法如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 利用递归思想实现&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static long fibonaci(int position) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (position == 0 || position == 1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		return position;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return fibonaci(position - 1) + fibonaci(position - 2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="斐波拉西" scheme="http://yoopwu.github.io/tags/%E6%96%90%E6%B3%A2%E6%8B%89%E8%A5%BF/"/>
    
      <category term="Java算法" scheme="http://yoopwu.github.io/tags/Java%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>序言-写在前面</title>
    <link href="http://yoopwu.github.io/2018/03/06/%E5%BA%8F%E8%A8%80/"/>
    <id>http://yoopwu.github.io/2018/03/06/序言/</id>
    <published>2018-03-06T12:35:18.660Z</published>
    <updated>2018-03-08T14:43:06.718Z</updated>
    
    <content type="html"><![CDATA[<p>从事软件开发行业也差不多有三年时间了，期间主要是从事android软件开发。之前也学过JavaWeb开发，但是久了不使用，现在也基本上忘的差不多了。在工作期间，也自学过一些其他的语言，包括Python、React-Native等基础知识，但由于各种原因，没有坚持下来，现在想想确实有点可惜了，有机会一定要重新拾起来。</p><p>想想现在差不多有很长一段时间由于懒惰而没有学习、进步了，现在有一种深深的危机感和内心的愧疚。逐渐发现身边的朋友每天都在进步、同时也在不断的写个人博客，来记录自己的成长历程，而且也在向GitHub提交自己的项目，这无疑会在他们以后的面试过程中加分。而且，在之前的面试过程中，也发现了这个问题，很多的同僚都会有自己的博客，而且在GitHub上面提交过自己的项目，这让我意识到自己问题的严重性。</p><p>在成长过程中，必然的会遇到各种瓶颈，也会遇到很多的困难和问题。写博客，记录下自己遇到的问题，并记录下解决方案，这会是一个很好的方法，以后若遇到同样的问题，也可以方便自己查找到解决方案，同时也许有机会为他人提供一定的帮助，何乐而不为？</p><p>其实，很早之前就有过写博客的想法，只是一直没有落到实处，而现在也是时候开启我的博客之路了，Come on!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;从事软件开发行业也差不多有三年时间了，期间主要是从事android软件开发。之前也学过JavaWeb开发，但是久了不使用，现在也基本上忘的差不多了。在工作期间，也自学过一些其他的语言，包括Python、React-Native等基础知识，但由于各种原因，没有坚持下来，现在想
      
    
    </summary>
    
    
      <category term="序言" scheme="http://yoopwu.github.io/tags/%E5%BA%8F%E8%A8%80/"/>
    
  </entry>
  
</feed>
